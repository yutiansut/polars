(function() {var implementors = {};
implementors["polars"] = [{"text":"impl&lt;T&gt; FromIterator&lt;(AlignedVec&lt;&lt;T as ArrowPrimitiveType&gt;::Native&gt;, (usize, Option&lt;Buffer&gt;))&gt; for ChunkedArray&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: PolarsNumericType,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; FromIterator&lt;T&gt; for AlignedVec&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; FromIterator&lt;Option&lt;&lt;T as ArrowPrimitiveType&gt;::Native&gt;&gt; for ChunkedArray&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: PolarsPrimitiveType,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;bool&gt; for BooleanChunked","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; FromIterator&lt;&amp;'a str&gt; for Utf8Chunked","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; FromIterator&lt;Cow&lt;'a, str&gt;&gt; for Utf8Chunked","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; FromIterator&lt;Option&lt;Cow&lt;'a, str&gt;&gt;&gt; for Utf8Chunked","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; FromIterator&lt;&amp;'a &amp;'a str&gt; for Utf8Chunked","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; FromIterator&lt;Option&lt;&amp;'a str&gt;&gt; for Utf8Chunked","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; FromIterator&lt;&amp;'a Option&lt;&amp;'a str&gt;&gt; for Utf8Chunked","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;String&gt; for Utf8Chunked","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;Option&lt;String&gt;&gt; for Utf8Chunked","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;Series&gt; for ListChunked","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; FromIterator&lt;&amp;'a Series&gt; for ListChunked","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;Option&lt;Series&gt;&gt; for ListChunked","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; FromIterator&lt;&amp;'a Option&lt;Series&gt;&gt; for ListChunked","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;Series&gt; for DataFrame","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;Option&lt;u8&gt;&gt; for Series","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;u8&gt; for Series","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; FromIterator&lt;&amp;'a u8&gt; for Series","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;Option&lt;u16&gt;&gt; for Series","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;u16&gt; for Series","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; FromIterator&lt;&amp;'a u16&gt; for Series","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;Option&lt;u32&gt;&gt; for Series","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;u32&gt; for Series","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; FromIterator&lt;&amp;'a u32&gt; for Series","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;Option&lt;u64&gt;&gt; for Series","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;u64&gt; for Series","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; FromIterator&lt;&amp;'a u64&gt; for Series","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;Option&lt;i8&gt;&gt; for Series","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;i8&gt; for Series","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; FromIterator&lt;&amp;'a i8&gt; for Series","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;Option&lt;i16&gt;&gt; for Series","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;i16&gt; for Series","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; FromIterator&lt;&amp;'a i16&gt; for Series","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;Option&lt;i32&gt;&gt; for Series","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;i32&gt; for Series","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; FromIterator&lt;&amp;'a i32&gt; for Series","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;Option&lt;i64&gt;&gt; for Series","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;i64&gt; for Series","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; FromIterator&lt;&amp;'a i64&gt; for Series","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;Option&lt;f32&gt;&gt; for Series","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;f32&gt; for Series","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; FromIterator&lt;&amp;'a f32&gt; for Series","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;Option&lt;f64&gt;&gt; for Series","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;f64&gt; for Series","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; FromIterator&lt;&amp;'a f64&gt; for Series","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;Option&lt;bool&gt;&gt; for Series","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;bool&gt; for Series","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; FromIterator&lt;&amp;'a bool&gt; for Series","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; FromIterator&lt;&amp;'a str&gt; for Series","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; FromIterator&lt;&amp;'a Series&gt; for Series","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;Series&gt; for Series","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;Option&lt;Series&gt;&gt; for Series","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()